import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JScrollPane;

import java.awt.Color;

import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import java.lang.Math;

/**
 * This is the Chatbot class. The main functionality of this project
 * is for the AI system to interact with the user. A successful chatbot
 * system will answer all the questions the user provide without punts or
 * errors. The main goal of this project to to provide consistency, logic and
 * user-friendliness.
 *
 * @Frankmed D Avege
 * @March 21, 2025
 */
public class Chatbot extends JFrame implements KeyListener
{
    // instance variables - replace the example below with your own
    JPanel p = new JPanel();
    JTextArea dialog = new JTextArea(20,50);
    JTextArea input = new JTextArea(1,50);
    JScrollPane scroll = new JScrollPane (
        dialog,
        JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,
        JScrollPane.HORIZONTAL_SCROLLBAR_NEVER
    );
    
    
    String[][] chatBot = {
        //Basic greetings
        {"hi", "hello", "howdy", "hola", "ola"},
        {"hi", "hello", "hey"},
        //Question greetings
        {"how are you", "how r you", "how r u", "how are u"},
        {"good", "doing well"},
        //default
        {"idle"},
    };

    /**
     * An example of a method - replace this comment with your own
     *
     * @param  y  a sample parameter for a method
     * @return    the sum of x and y
     */
    public static void main (String[] args)
    {
        // put your code here
        new Chatbot();
    }
    
    public Chatbot() {
        super("Chat bot");
        setSize(600,400);
        setResizable(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        
        dialog.setEditable(false);
        input.addKeyListener(this);
        
        p.add(scroll);
        p.add(input);
        p.setBackground(new Color (255, 200, 0));
        add(p);
        
        setVisible(true);
    }
    
    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_ENTER)
        {
            input.setEditable(false);
            //-------grab a quote-----------
            String quote=input.getText();
            input.setText("");
            addText("-->You:\t"+quote);
            quote.trim();
            while(quote.charAt(quote.length()-1)== '!' ||
                  quote.charAt(quote.length()-1)== '.' ||
                  quote.charAt(quote.length()-1)== '?' 
            ) {
                  quote=quote.substring(0,quote.length()-1);
            }
            quote.trim();
            byte response=0;
            /*
             * 0: we're searching through Chatbot[][] for matches
             * 1: we didn't find anything in chatBot[][]
             * 2: we did find something in chatBot[][]
             */
            //-------check for matches------
            int j = 0; //which group we're checking
            while (response==0) {
                if(inArray(quote.toLowerCase(),chatBot[j* 2])) {
                    response=2;
                    int r=(int)Math.floor(Math.random() * chatBot[(j*2)+1].length);
                    addText("\n-->IDLE\t"+chatBot[(j*2)+1][r]);
                }
                j++;
                if(j*2==chatBot.length-1 && response==0) {
                    response=1;
                }
            }
            //-------default----------------
            if(response==1) {
                int r=(int)Math.floor(Math.random() * chatBot[chatBot.length-1].length);
                addText("\n-->IDLE\t"+chatBot[chatBot.length-1][r]);    
            }
            addText("\n");
        }
    }
    
    public void keyReleased(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_ENTER) {
            input.setEditable(true);
        }
    }
    
    public void keyTyped(KeyEvent e) {
        
    }
    
    public void addText(String str) {
        dialog.setText(dialog.getText() +str);
    }
    
    public boolean inArray(String in, String[] str) {
        boolean match=false;
        for(int i = 0; i < str.length; i++) {
            if(str[i].equals(in)) {
                match=true;
            }
        }
        return match;
    }
}
